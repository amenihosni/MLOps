name: MLOps Pipeline with MLflow Monitoring

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt
          pip install mlflow  # Ensure MLflow is installed

      # 4. Prepare data (equivalent to `make prepare`)
      - name: Prepare data
        run: |
          python main.py --prepare churn-bigml-80.csv

      # 5. Train model (equivalent to `make train`)
      - name: Train model
        run: |
          python main.py --train

      # 6. Evaluate model (equivalent to `make evaluate`)
      - name: Evaluate model
        run: |
          python main.py --evaluate

      # 7. Run MLflow UI (equivalent to `make run-mlflow`)
      - name: Run MLflow monitoring
        run: |
          nohup python -m mlflow ui --host 0.0.0.0 --port 5000 &  # Run in background
          sleep 2 && xdg-open http://127.0.0.1:5000 || start http://127.0.0.1:5000 || open http://127.0.0.1:5000

      # 8. Run tests (optional, equivalent to `make test`)
      - name: Run tests
        run: |
          python -m pytest tests/

      # 9. Docker operations (optional, equivalent to docker steps in `Makefile`)
      - name: Build Docker image
        run: |
          docker build -t amenihosni/mlops-app:latest .
      
      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push amenihosni/mlops-app:latest

      # 10. Push MLflow logs as artifacts (optional)
      - name: Push MLflow logs to GitHub artifacts (optional)
        uses: actions/upload-artifact@v2
        with:
          name: mlflow-logs
          path: mlruns/  # This assumes that your MLflow logs are stored in `mlruns/`
